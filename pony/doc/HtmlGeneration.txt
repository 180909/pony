Пони предоставляет 2 способа генерации страниц
оператор принт
язык шаблонов

зачем их два
первый проще и расчитан для новичков
второй более гибкий и мощный



### Использование декоратора printhtml

хелло ворлд с помощью
printhtml
<html><html>

затем убираем тэг html и показываем что в страницу добавляется автоматически
подробно об этом вы можете прочитать в CSS 

пример с передачей параметра в функцию

декоратор webpage
если вам не хочется писать два декоратора http, printhtml
можно писать webpage

пример с передачей кода и как он будет отображен
как же пони справляется с такой проблемой?
а с помощью опасных и безопасных строк
все строки внутри - безопасные
все остальные, полученные от пользователя или из базы данных считаются опасными

у принта есть недостатки
его нельзя использовать в гае
потому что декоратор printhtml требует компиляции кода, что запрещено в гае

если отдекорировать printhtml, то все строковые константы заменяются на безопасные строки
как обойти это? если нам нужна строчка, которая не заменится на безопасную.
самый простой способ это сделать так
"это обычная строка" [:]
или так
plainstr("обычная строка")

result = db.fetchall("select * from Table1"[:])
это касается только функции, если в модуле строка объявлена, то все нормально

либо вынести логику работы с базой данных в отдельную функцию


это получается так изза особенностей реализации питона

Безопасные и небезопасные строки

Веб приложения могут быть подвержены Cross-Site Scripting (XSS) атаке.
Суть этой атаки в следующем. Допустим есть веб-сайт, на котором есть форум. 
Злоумышленник под видом сообщения передает на сайт javascript код. Веб-приложение сохраняет
этот код в базе данных как и любое другое сообщение.
Теперь у любого пользователя, который откроет страницу, содержащую это сообщение, выполнится переданный злоумышленником javascript код. 
Чтобы защититься от такого рода атак, все данные, которые получены сервером от пользователя должны пройти процесс эскапирования -
преобразования символов &amp;,&lt;,&quot;,&gt;,&#39; в их эквиваленты для безопасного представления на странице.

В большинстве современных веб-фреймворков для того, чтобы выполнилось такое преобразование, нужно вызвать специальную функцию.
Такой подход неудобен и чреват ошибками. В Пони реализована более удобная концепция.
Строки, которые генерируются в Пони, являются экземплярами класса Html. Это безопасные строки.
Любой текст, который Пони получает от пользователя считается небезопасной строкой. Любое соединение небезопасной строки
со строкой Html приводит к эскапированию небезопасной строки перед соедниением. Таким образом, если пользователь передал в веб-приложение
код, при генерации страницы этот код будет преобразован в безопасную строку и выведен как обычный текст.





Для генерации более сложных страниц удобно использовать шаблоны, о которых пойдет речь далее.


----- потокобезопасность оператора принт внутри пони --------
не так уж много современных фремв используют принт, хотя это удобно
потому что для вывода не на консоль требуется редирект вывода
эта операция не являестся потокобезопасной в питоне
в пони она потокобезопасна
поэтому это накапливается в буффере

