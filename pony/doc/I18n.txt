### Интернационализация

Интернационализация это представление содержимого веб-сайта на разных языках.
Многие фреймворки используют для этой цели стандартный модуль Питона gettext.
Пони реализует более удобный и не менее мощный способ интернационализации речь о
котором пойдет в этой главе.

Для начала давайте разберемся как веб-приложение понимает на каком языке нужно отобразить контент.
Когда браузер пользователя посылает запрос на веб-сайт, заголовок HTTP запроса
содержит поле _Accept-Language_ в котором передается список языков и их приоритеты.
Этот список можно задать в настройках браузера. По умолчанию браузер берет настройки из операционной системы.

Таким образом, Пони получает список предпочтительных языков от браузера клиента.
Пони сортирует список языков в порядке убывания приоритета.
При генерации страницы на основе шаблонов Пони использует эту информацию и пытается подобрать
соответствующий перевод в соответствии с приоритетом.
Если более подходящий язык не найден, для генерации страницы используется первоначальный текст шаблона.
После общего обзора процесса интернационализации давайте передем к деталям.




### Два способа интернационализации страниц

Шаблон обычно состоит из HTML разметки и текста.
При переводе страницы на другой язык разработчик стоит перед выбором из двух вариантов.
Первый вариант - отметить в шаблоне фразы, для которых предусматривается перевод и сопоставить им
переведенный текст в специальном файле.
Второй вариант - задать для каждого языка отдельный шаблон.

У каждого варианта есть плюсы и минусы.
Первый вариант удобен если текста на странице немного и в шаблоне есть фразы, которые используются
в других страницах. В этом случае нужно везде в шаблонах указать, что для этой фразы нужен перевод
и сопоставить перевод в специальном файле.
Минус этого варианта в том, что так как перевод делается по отдельным фразам, может получиться, что
на одной странице будут фразы на разных языках.

Второй вариант удобен, если страница содержит много текста или если для разных языков нужна
различная раскладка страницы(например колонка навигации отображается с другой стороны).
Минус этого варианта в том, что при внесении изменений в раскладку HTML нужно менять более одного шаблона.




### Первый вариант интернационализации


Разработчик помечает фразы, для которых предусмотрен перевод в тексте шаблона с помощью символа $
и фигурных скобок:

   ${Please enter login and password:}   

В файле translations.txt для этой фразы задается перевод:

   Please enter login and password:
     ru  Пожалуйста введите логин и пароль:
     de  Bitte geben Sie Ihren Benutzernamen und Ihr Passwort ein:

Если предпочтительным для пользователя языком является русский или немецкий,
то Пони подставит переведенную фразу в шаблон.
Допустим, что список предпочтительных языков состоит лишь из французского(fr).
Так как перевода на французский в файле нет, Пони отобразит на странице изначальную фразу:

   Please enter login and password:   

### Формат файла перевода

translations.txt
может быть либо в самой Пони, либо в главной директории пользователя
в директории перекрывает понивский (для того же ключа)
может быть translations-ru.txt


### Использование параметров в строке для перевода

Пример:
параметры
5 плюс 6 равняется 11
${$a plus $b equals to $(a + b)}
$1 plus $2 equals to $3
  ru  $1 плюс $2 равняется $3
  ru  $3 это сумма $1 и $2
  можно менять местами



### Второй вариант интернационализации 

можно весь текст шаблона переводить
когда ищется файл на диске

def func1():
   return html()

module1.func1.html

если задан язык русский, то проверяется есть ли шаблон
module1.func1-ru.html
если этот файл есть, то используется он


### Установка предпочтительного языка в сессии

язык берется из заголовка браузера accept-languages.
можно перекрыть в сессии - lang

список языков, который отсортирован в порядке убывания приоритета
lang ставится в начало списка, перед этими всеми языками



