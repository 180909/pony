>>> from pony.main import *

>>> db_stuff = ['Persistent', # Base persistent class
...             'Optional', 'Required', 'Unique', 'PrimaryKey']
>>> for name in db_stuff:
...     assert(name in locals())
...

>>> x = Unique(int)
>>> y = Optional(bool)
>>> z = Required(unicode)
>>> t = PrimaryKey(str)
>>> class X(Persistent):
...     a = y
...     b = x
...     c = t
...     d = z
...
>>> attrs = [x, y, z, t]
>>> [ attr.name for attr in attrs ] == ['b', 'a', 'd', 'c']
True
>>> [ attr.index for attr in attrs ] == [0, 1, 2, 3]
True

>>> X.foo = Unique(str)
Traceback (most recent call last):
  ...
TypeError: New attributes cannot be assigned...

# >>> class Y(Persistent):
# ...     a = X.a
# ...
# Traceback (most recent call last):
#   ...
# AttributeError: Single attribute cannot be used...

